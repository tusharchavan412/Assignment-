EC2:
===
creating instances as per requirement
Managing Security Groups.
Creating EBS snapshots and AMIs for DEV, QA and UAT Env
Creating EBS snapshot lifecycles
Starting and Stopping EC2 instances when not in use.
use aws cli create shell scripts.
Knowledge about LB and ASG as its used in production
we use all on demand, reserved and spot EC2 instances

VPC:
===
Route table updates
NACL updates
Creating vpc, subnets, IGW, NAT Gateway and NAT instances.
Peering connection from test-vpc to prod-vpc
VPC end point for connectivity over a private link
vpc monitoring with flow-logs, generating report and providing it to network admin team

S3:
==
keep backups of project files and wars, logs etc.
static website (internal project website, i.e: documentation website)
cross region/account replication
s3 event notifications
object lifecycle creation
creating, deleting buckets
uploading, deleting objects to and from the buckets.
use S3 CLI

IAM:
===
Creating groups,
adding users to groups
active dir is sycned so users are synced directly to AWS.
giving policies to all the users and groups as per requirement
creating customer managed and inline policies with the help of visual editor
creating and maintaining multiple roles for services and for users
Roles for cross account access.

CloudWatch:
==========
Monitoring of different metrics
creating custom metrics
creating alarms
maintaing and creating dashboards
tracking CW events and setting up appropriate rules and targets
SNS configuration as a target
CW logs configruation for our tomcat logs

SNS:
===
creating topics and updating subscribers

CT:
==
creating trail, generating report and sharing it with IT ops team, 
AWS complicance team of our company.


GIT DevOps roles and responsibilities in organisation:

- Creating & Managing Repositories (dev repos, QA repos, and devops repos)
       - [dev repos- application source code ---- composefile, Dockerfile, Jenkins file also here]
       - [qa repos - test framework ---- composefile, dockerfile, jenkins file also here]
       - [devops repo - dockerfile, scripts backup, yaml files etc, jenkins file, .tf config files]

- creating branches (as per branching strategies) and tags
- Raising Pull Request
- Resolving merge conflicts
- Forks
- Adding collaborators to our repositories (read/write)  -- giving permission to the report
- Manhooksaging diff web
- Integration with jenkins

Linux:
=====
All our infra is in Linux only.
env variables set,
path set
patching
installing packages etc....
shell scripts knowledge

Project Team:-
============
Dev:-10-20
QA:-30-40
UAT:-5-10
DevOps:- 4 - 2 seniors and app junior ho
DB - 
Network -

Instances kitne hain:-
====================
DEV:- 10-15
===
QA:- 30-40 instance (alag alag type ki testing hoti hain manual, automation, api and performance based testing 
==   and diff machines are needed for differnet feature based application setup or env setup)
     (qa teams asks to setup properties in application files to change the behaviour of application as per requirement)
     (qa team can ask DB changes as well, they will ask to run some DB commands)
UAT- 5-10
===

PROD:- 20-30 high config vms --- autoscaling setup
====
flavour of linux :- RHEL, amazon AMI 2 (Kernal 5.0)
type:- 	:- t3.large -  8GB 2core for test environment 
	:- t2.xlarge - 16gb 4core for prod and pre-prod and perf environments, jenkins, ansible machine
	
Note Down all the software's versions which you are using and mention them in resume.

AMI: per envs 2 AMI
===

VPC- 2  (TEST-VPC , PROD-VPC)
SUBNETS:-	
		QA	-	2 multiple zone
		DEV	-	2 multiple zone
		UAT	-	2 multiple zone
		DEVOPS	-	1 Subnet -- AMI also present